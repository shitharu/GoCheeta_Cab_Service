
package icbt;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebServiceNew", targetNamespace = "http://icbt/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebServiceNew {


    /**
     * 
     * @param st
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateStudents", targetNamespace = "http://icbt/", className = "icbt.UpdateStudents")
    @ResponseWrapper(localName = "updateStudentsResponse", targetNamespace = "http://icbt/", className = "icbt.UpdateStudentsResponse")
    @Action(input = "http://icbt/NewWebServiceNew/updateStudentsRequest", output = "http://icbt/NewWebServiceNew/updateStudentsResponse")
    public boolean updateStudents(
        @WebParam(name = "st", targetNamespace = "")
        Student st);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteStudents", targetNamespace = "http://icbt/", className = "icbt.DeleteStudents")
    @ResponseWrapper(localName = "deleteStudentsResponse", targetNamespace = "http://icbt/", className = "icbt.DeleteStudentsResponse")
    @Action(input = "http://icbt/NewWebServiceNew/deleteStudentsRequest", output = "http://icbt/NewWebServiceNew/deleteStudentsResponse")
    public boolean deleteStudents(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns icbt.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudent", targetNamespace = "http://icbt/", className = "icbt.GetStudent")
    @ResponseWrapper(localName = "getStudentResponse", targetNamespace = "http://icbt/", className = "icbt.GetStudentResponse")
    @Action(input = "http://icbt/NewWebServiceNew/getStudentRequest", output = "http://icbt/NewWebServiceNew/getStudentResponse")
    public Student getStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://icbt/", className = "icbt.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://icbt/", className = "icbt.HelloResponse")
    @Action(input = "http://icbt/NewWebServiceNew/helloRequest", output = "http://icbt/NewWebServiceNew/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<icbt.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudents", targetNamespace = "http://icbt/", className = "icbt.GetStudents")
    @ResponseWrapper(localName = "getStudentsResponse", targetNamespace = "http://icbt/", className = "icbt.GetStudentsResponse")
    @Action(input = "http://icbt/NewWebServiceNew/getStudentsRequest", output = "http://icbt/NewWebServiceNew/getStudentsResponse")
    public List<Student> getStudents();

    /**
     * 
     * @param st
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://icbt/", className = "icbt.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://icbt/", className = "icbt.AddStudentResponse")
    @Action(input = "http://icbt/NewWebServiceNew/addStudentRequest", output = "http://icbt/NewWebServiceNew/addStudentResponse")
    public boolean addStudent(
        @WebParam(name = "st", targetNamespace = "")
        Student st);

}
